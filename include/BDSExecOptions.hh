/* 
Beam Delivery Simulation (BDSIM) Copyright (C) Royal Holloway, 
University of London 2001 - 2021.

This file is part of BDSIM.

BDSIM is free software: you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published 
by the Free Software Foundation version 3 of the License.

BDSIM is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with BDSIM.  If not, see <http://www.gnu.org/licenses/>.
*/
#ifndef BDSEXECOPTIONS_H
#define BDSEXECOPTIONS_H

#include "globals.hh" // geant4 types / globals

#include "parser/beam.h"
#include "parser/options.h"

/**
 * @brief Executable option processing for BDSIM
 */

class BDSExecOptions
{
public: 
  BDSExecOptions(int argc, char **argv);

  ~BDSExecOptions(){;}

  /// Print out the available executable commands (no exit).
  void Usage() const;

  /// Print out the copyright information (no exit).
  void PrintCopyright() const;

  /// Print academic citation information.
  void PrintCitation() const;

  /// Print out the commands and their set values.
  void Print() const;

  /// Accessor for options generated by command line parsing.
  const GMAD::Options& Options() const {return options;}

  /// Accessor for beam options generate by command line parsing.
  const GMAD::Beam& Beam() const {return beam;}

  /// Acessor for convenience for the one thing that's needed before the parser options.
  inline G4String InputFileName() const {return options.inputFileName;}

  inline G4bool IgnoreSIGINT() const {return ignoreSIGINT;}  ///< Accessor
  
private:
  /// Private default constructor to force use of provided one.
  BDSExecOptions();
  
  /** Parse the command line options
   * @param[in] argc command line input number of variables
   * @param[in] argv array of char* of the input parameters
   */
  void Parse(int argc, char **argv);
  
  /// Helper method to set the BDSIMPath correctly
  G4String GetPath(G4String filename);

  /// The options instance that is populated by parsing the command line options.
  GMAD::Options options;

  /// The beam instance that is populated by parsing some command line options.
  GMAD::Beam beam;

  /// Whether to ignore Ctrl-C or not - used for ctest.
  G4bool ignoreSIGINT;
};

#endif
