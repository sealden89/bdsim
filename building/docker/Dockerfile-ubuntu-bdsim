FROM scratch

ADD ubuntu-focal-core-cloudimg-amd64-root.tar.gz /
# verify that the APT lists files do not exist
RUN [ -z "$(apt-get indextargets)" ]
# (see https://bugs.launchpad.net/cloud-images/+bug/1699913)

# a few minor docker-specific tweaks
# see https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap
RUN set -xe \
    \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L40-L48
  && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \
  && echo 'exit 101' >> /usr/sbin/policy-rc.d \
  && chmod +x /usr/sbin/policy-rc.d \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L54-L56
  && dpkg-divert --local --rename --add /sbin/initctl \
  && cp -a /usr/sbin/policy-rc.d /sbin/initctl \
  && sed -i 's/^exit.*/exit 0/' /sbin/initctl \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L71-L78
  && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L85-L105
  && echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean \
  && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
  && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L109-L115
  && echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/docker-no-languages \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L118-L130
  && echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes \
  \
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L134-L151
  && echo 'Apt::AutoRemove::SuggestsImportant "false";' > /etc/apt/apt.conf.d/docker-autoremove-suggests

# make systemd-detect-virt return "docker"
# See: https://github.com/systemd/systemd/blob/aa0c34279ee40bce2f9681b496922dedbadfca19/src/basic/virt.c#L434
RUN mkdir -p /run/systemd && echo 'docker' > /run/systemd/container

CMD ["/bin/bash"]

WORKDIR /tmp

# start with more uptodate packages
RUN apt-get update

# build essentials 
RUN apt -y install build-essential

# required packages
RUN apt-get -y install cmake cmake-curses-gui wget xorg-dev freeglut3-dev qt5-default python2.7-dev libssl-dev liblz4-dev git

# up to date cmake
# RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.4/cmake-3.16.4.tar.gz && \
#     tar zxf cmake-3.16.4.tar.gz && rm -rfv cmake-3.16.4.tar.gz && cd cmake-3.16.4 && \
#     ./bootstrap && make install && cd ../ && rm -rfv cmake-3.16.4  

RUN wget http://proj-clhep.web.cern.ch/proj-clhep/dist1/clhep-2.4.1.3.tgz && \
    tar -xf clhep-2.4.1.3.tgz && rm -rf clhep-2.4.1.3.tgz && \
    mkdir 2.4.1.3-build && cd 2.4.1.3-build && cmake ../2.4.1.3/CLHEP/ && \
    make -j6 && make install && cd ../ && rm -rfv 2.4.1.3 2.4.1.3-build

# RUN apt-get -y install liblz4-dev libssl1.0-dev

RUN wget https://root.cern/download/root_v6.20.00.source.tar.gz 
RUN tar zxf root_v6.20.00.source.tar.gz && mkdir root-6.20.00-build 
RUN cd root-6.20.00-build && cmake ../root-6.20.00 && make -j6 && make install 
## && cd ../ && rm -rfv root-6.20.00-build root-6.20.00

RUN apt-get -y install libxerces-c-dev

RUN wget https://github.com/Geant4/geant4/archive/v10.4.3.tar.gz && \
    tar zxf v10.4.3.tar.gz && mkdir geant4-10.4.3-build && cd geant4-10.4.3-build && \
    cmake ../geant4-10.4.3 -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_GDML=ON -DGEANT4_USE_OPENGL_X11=ON \
    -DGEANT4_USE_SYSTEM_CLHEP=ON -DGEANT4_USE_QT=ON -DGEANT4_USE_RAYTRACER_X11=ON && make -j6 && make install 

SHELL ["/bin/bash", "-c"]

RUN apt-get -y install bison flex
RUN git clone https://stewartboogert@bitbucket.org/jairhul/bdsim.git && cd bdsim && git checkout develop 
RUN . /usr/local/bin/thisroot.sh && mkdir bdsim-build && cd bdsim-build && cmake ../bdsim && make -j6 && make install
## && cd ../ && rm -rfv bdsim-build bdsim 

RUN apt-get -y install python-pip
RUN pip install scipy 
RUN pip install matplotlib==2.0
RUN pip install numpy 
RUN pip install ipython

RUN export DEBIAN_FRONTEND=noninteractive && apt-get -y install python-tk


# Python support tools (pybdsim, pymadx, pymad8, pytransport, pyg4ometry)
RUN git clone https://stewartboogert@bitbucket.org/jairhul/pymadx.git && \
    cd pymadx && \
    make develop

RUN git clone https://stewartboogert@bitbucket.org/jairhul/pymad8.git && \
    cd pymad8 && \
    make develop

RUN git clone https://stewartboogert@bitbucket.org/jairhul/pytransport.git && \
    cd pytransport && \
    make develop

RUN git clone https://stewartboogert@bitbucket.org/jairhul/pybdsim.git && \
    cd pybdsim && \
    make develop
